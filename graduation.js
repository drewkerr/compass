$(document).ready(function() {

  // only run once
  if (!window.single) {
    window.single = true
  } else {
    return
  }

  // add elements to page and set up styles
  var wrapper = $(`<div id="dash">
    <style type="text/css">
      @media screen {
        #dash {
          position: fixed;
          box-sizing: border-box;
          top: 0;
          padding: 64px calc(50% - 490px);
          z-index: 100;
          background-color: #f0f2f5;
          width: 100%;
          height: 100%;
          overflow: scroll;
          -webkit-overflow-scrolling: touch;
        }
        .header {
          display: flex;
          align-items: center;
          margin: 1em;
        }
        .header h1 {
          font-size: 2rem;
          letter-spacing: 0;
        }
        select {
          margin-left: auto;
        }
        .button {
          display: inline-block;
          margin-left: 1em;
          padding: 0.5em 1em;
          border-radius: 0.5em;
          color: #666;
          border: #666 1px solid;
        }
        .button:first-of-type {
          margin-right: auto;
        }
        .button:hover {
          background-color: #ccc;
        }
        .cycle {
          margin: 1em 0 0 2em;
        }
        .note {
          position: relative;
          top: 25%;
          margin: 2em;
          color: #666;
          text-align: center;
          font-size: large;
          line-height: 2;
        }
        .cycle h2, .cycle h3 {
          margin: 0;
          padding: 0;
          font-size: medium;
        }
        .cycle h3 {
          display: inline-block;
          position: sticky;
          top: 1em;
          min-width: 3em;
          background-color: #f0f2f5;
        }
        .level {
          margin: 1em 0 0 1em;
        }
        .group {
          display: flex;
          flex-wrap: wrap;
          margin: 1em 0 1em 4em;
          gap: 2em;
        }
        .student {
          background: white;
          width: 30%;
          aspect-ratio: 1 / 1.414;
          box-shadow: 0 0 1em rgba(0,0,0,0.1);
        }
        .student.none {
          opacity: 0.1;
        }
      }
      @media print {
        * {
          margin: 0;
          padding: 0;
        }
        #dash * {
          background: white;
        }
        body form, .header, h2, h3, #progress {
          display: none;
        }
        .student {
          page-break-after: always;
          background: white;
        }
        .student.none {
          display: none;
        }
      }
    </style>
  </div>`).appendTo('body')
  
  // SVG symbol reuse of logo
  $(`<div style="display: none;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 595 830">
  <symbol id="logohead">
  <path fill="#004A37" d="M127.616 68.02c-7.57 7.952-14.562 18.93-19.707 31.436a120.21 120.21 0 0 0-2.072 5.405c-2.603 9.483-3.87 18.675-3.924 26.963.198.264.46.608.656.871v-.074c-.022-.026.022-.114 0-.144.557-1.968 1.326-3.717 2.1-5.695.51-1.3 1.388-3.352 1.966-4.588 5.202-9.276 11.183-15.2 17.346-17.783 1.463 3.965 1.947 9.26 1.201 15.048 1.193-3.676 2.34-8.395 3.12-12.673 2.594-14.208 2.242-28.059-.686-38.766"/><path fill="#004A37" d="M141.56 57.313c-3.484 1.69-7.004 4.165-10.447 7.288 2.247 11.022 2.26 24.445-.244 38.16-1.585 8.686-4.084 16.897-7.22 24.173-.002.01-.006.028-.006.037.029-.075.064-.146.096-.221-.588 2.177-1.474 4.058-2.33 6.25-.509 1.298-1.33 2.788-1.909 4.022-2.312 4.129-4.373 7.508-7.125 10.497-.126-.23-.396-.112-.527-.346l-.002.003c.51.905 1.011 1.805 1.476 2.659 9.97-7.857 19.574-21.35 26.165-37.356a124.835 124.835 0 0 0 2.071-5.411c5.4-19.673 5.1-38.136.002-49.755"/><path fill="#8D1331" d="M124.214 104.154c-6.163 2.584-12.953 9.358-18.157 18.636a65.004 65.004 0 0 0-1.634 3.806 63.135 63.135 0 0 0-1.983 5.928c3.35 4.5 6.352 9.303 8.843 13.651 5.691-6.575 10.61-16.037 13.986-26.975.748-5.8.412-11.072-1.055-15.046"/><path fill="#8D1331" d="M111.538 146.628c.24.418.474.833.703 1.242 2.751-2.989 5.382-6.62 7.7-10.75a63.887 63.887 0 0 0 3.798-10.37c-3.403 7.949-7.585 14.772-12.2 19.878"/><path fill="#004A37" d="M100.354 152.828a31.688 31.688 0 0 1-1.461-1.554c-3.303-4.356-5.102-8.95-5.057-12.389.76.04 1.57.188 2.408.418 0-.006 0-.01.003-.016a77.284 77.284 0 0 0-8.08-4.958c-9.002-4.787-18.382-7.543-26.273-7.955 3.006 5.272 7.241 10.71 12.521 15.826a83.772 83.772 0 0 0 4.255 3.327c9.75 7.128 20.354 11.668 29.196 12.807-2.521-1.259-5.138-3.136-7.512-5.506"/><path fill="#004A37" d="M97.093 129.43a82.398 82.398 0 0 0-4.253-3.324c-12.362-9.033-26.121-13.967-35.887-13.019.442 3.151 1.565 6.594 3.288 10.162 7.96.914 17.009 3.803 25.724 8.439 4.9 2.604 9.39 5.607 13.32 8.814l.002.001c-.032-.025-.062-.052-.091-.078.164.08.331.186.5.271.09.046.188.096.296.159 2.379 1.257 4.819 3.033 7.05 5.255.507.508.993 1.025 1.455 1.55 2.451 3.231 4.064 6.587 4.725 9.511-.016-.032-.036-.062-.05-.095l.028.102c.218.47.43.943.612 1.411.247-.017.504-.02.748-.044-1.214-8.64-7.498-19.465-17.467-29.115"/><path fill="#FACE33" d="M96.279 139.311a11.48 11.48 0 0 0-2.443-.426c-.046 3.438 1.754 8.033 5.057 12.39.464.526.95 1.046 1.461 1.552 4.273 4.264 9.34 7.014 13.203 7.23.007-.514-.039-1.061-.116-1.622-2.683-6.443-8.9-13.327-17.162-19.124"/><path fill="#FACE33" d="M113.222 157.17c-.661-2.923-2.274-6.28-4.724-9.51a33.648 33.648 0 0 0-1.457-1.55c-2.48-2.472-5.224-4.429-7.844-5.686 6.499 5.29 11.447 11.145 14.025 16.747"/><path fill="#004A37" d="M167.83 115.346c-.17.288-.515.346-.743.171-.8-.512-2.29-1.774-5.152-1.774-4.808 0-8.416 4.066-8.416 8.361 0 2.23.86 4.464 2.348 6.01 1.489 1.544 3.662 2.46 6.068 2.46 2.576 0 4.18-.744 5.152-1.374.344-.228.63-.171.802.115l2.117 3.09c.174.29.113.63-.172.804-1.716 1.317-4.065 2.29-7.956 2.29-3.665 0-7.155-1.375-9.676-3.838-2.461-2.404-3.948-5.836-3.948-9.557 0-7.273 6.355-13.34 13.624-13.34 4.18 0 6.582 1.66 8.013 2.576.289.229.403.573.172.802l-2.233 3.204ZM191.795 112.37l-2.747 2.747c-.229.23-.517.346-.746.116-.345-.284-1.432-1.43-2.919-1.49-2.634-.114-6.011 2.06-6.011 9.048v11.62c0 .344-.229.573-.574.573h-3.948c-.344 0-.573-.229-.573-.573v-24.56c0-.342.23-.572.573-.572h3.948c.345 0 .574.23.574.573v1.889h.114c1.491-1.774 3.379-2.865 5.84-2.976 3.09-.118 5.209 1.602 6.47 2.804.285.229.228.572 0 .801M215.298 131.432c-1.603 2.576-4.749 4.067-9.1 4.067-4.41 0-7.557-1.49-9.159-4.067-1.204-1.832-1.718-3.72-1.718-6.926v-14.654c0-.344.229-.573.573-.573h3.948c.343 0 .572.23.572.573v13.455c0 1.484 0 3.261.457 4.52.805 2.002 3.266 2.919 5.268 2.919 2.06 0 4.524-.917 5.268-2.918.516-1.26.516-3.037.516-4.521v-13.455c0-.344.23-.573.57-.573h3.95c.344 0 .573.23.573.573v14.654c0 3.207-.515 5.094-1.718 6.926M230.542 135.498c-4.579 0-6.867-1.545-8.816-3.093-.286-.169-.286-.57-.057-.798l2.635-2.579c.17-.17.572-.229.8 0 1.032.919 2.805 2.004 5.093 2.004 2.52 0 4.468-.802 4.468-2.92 0-2.23-2.92-3.032-5.898-4.405-3.547-1.603-7.155-3.437-7.155-8.015 0-4.295 3.379-6.928 9.273-6.928 3.322 0 6.012.974 7.899 2.233.343.229.228.572 0 .801l-2.46 2.633a.616.616 0 0 1-.8.06c-.974-.576-2.404-1.263-4.694-1.263-3.035 0-4.067 1.263-4.067 2.635 0 1.603 2.176 2.518 4.41 3.548 3.893 1.89 8.585 3.32 8.585 8.416 0 4.75-3.662 7.671-9.216 7.671M255.658 113.515c-4.694 0-8.413 3.95-8.413 8.643 0 4.695 3.72 8.588 8.413 8.588 4.692 0 8.412-3.893 8.412-8.588 0-4.693-3.72-8.643-8.412-8.643m0 21.983c-7.382 0-13.507-5.954-13.507-13.34 0-7.382 6.125-13.394 13.507-13.394s13.507 6.012 13.507 13.394c0 7.386-6.125 13.34-13.507 13.34M289.055 114.888c-1.26-1.085-2.692-1.716-4.635-1.716-3.261 0-6.297 2.462-6.983 6.183h13.792c-.057-1.89-1.03-3.434-2.174-4.467Zm7.555 8.473c0 .345-.229.574-.574.574h-18.599c.4 3.49 3.264 6.753 8.3 6.699 2.346 0 4.288-.861 5.665-1.776.4-.287.63-.23.858 0l2.69 2.749c.225.229.225.63 0 .798-2.576 1.95-5.323 3.093-9.557 3.093-7.897 0-13.507-5.897-13.507-13.683 0-3.891 1.43-7.213 3.72-9.503 2.232-2.345 5.095-3.547 8.927-3.547 3.836 0 6.812 1.601 8.756 3.72 2.116 2.235 3.375 5.324 3.375 9.62l-.054 1.256ZM167.983 157.865c-.792.636-2.702 1.832-5.453 1.832-4.84 0-8.943-3.923-8.943-8.944 0-4.842 4.102-8.893 8.943-8.893 2.575 0 4.077.894 5.453 1.812.102.076.155.229.05.356l-.995 1.528c-.076.126-.252.154-.355.077-.816-.56-2.04-1.425-4.153-1.425-3.514 0-6.495 3.03-6.495 6.545 0 3.695 2.951 6.602 6.495 6.602 2.267 0 3.44-.97 4.153-1.4.126-.08.28-.053.355.073l1.02 1.479c.08.127.027.279-.075.358M180.97 144.13c-3.641 0-6.624 3.005-6.624 6.648 0 3.62 2.957 6.628 6.624 6.628 3.646 0 6.6-3.008 6.6-6.628 0-3.643-2.98-6.648-6.6-6.648m0 15.542c-4.94 0-8.991-3.974-8.991-8.894 0-4.916 4.05-8.942 8.991-8.942 4.92 0 8.972 4.026 8.972 8.942 0 4.92-4.051 8.894-8.972 8.894M205.406 159.443h-9.605c-.153 0-.256-.103-.256-.255v-16.841c0-.153.103-.258.256-.258h1.883c.155 0 .257.105.257.258v14.956h7.465c.153 0 .256.102.256.254v1.631c0 .152-.103.255-.256.255M220.49 159.443h-9.605c-.154 0-.257-.103-.257-.255v-16.841c0-.153.103-.258.257-.258h1.884c.153 0 .254.105.254.258v14.956h7.466c.155 0 .257.102.257.254v1.631c0 .152-.102.255-.257.255M238.042 159.443h-12.074c-.155 0-.255-.103-.255-.255v-16.841c0-.153.1-.258.255-.258h12.074c.15 0 .254.105.254.258v1.63c0 .152-.103.255-.254.255h-9.935v5.426h8.583c.156 0 .256.103.256.255v1.632c0 .152-.1.253-.256.253h-8.583v5.505h9.935c.15 0 .254.102.254.254v1.631c0 .152-.103.255-.254.255M277.188 159.443h-12.071c-.155 0-.256-.103-.256-.255v-16.841c0-.153.1-.258.256-.258h12.071c.155 0 .256.105.256.258v1.63c0 .152-.1.255-.256.255h-9.932v5.426h8.585c.15 0 .253.103.253.255v1.632a.24.24 0 0 1-.253.253h-8.585v5.505h9.932c.155 0 .256.102.256.254v1.631c0 .152-.1.255-.256.255M258.495 156.04v-6.072a.256.256 0 0 0-.257-.257h-6.825c-.154 0-.256.103-.256.257v1.55c0 .155.102.255.256.255h4.686v3.721c-.942.992-2.6 1.882-4.788 1.882-3.54 0-6.495-2.875-6.495-6.622 0-3.541 2.955-6.547 6.495-6.547 2.113 0 3.336.866 4.151 1.426.105.077.281.05.358-.078l.992-1.527c.102-.127.05-.281-.053-.356-1.373-.918-2.875-1.812-5.448-1.812-4.892 0-8.94 4.029-8.94 8.894 0 5.02 4.1 8.918 8.94 8.918.937 0 1.755-.156 2.483-.363a8.932 8.932 0 0 0 4.701-3.269"/>
  <path stroke="#004A37" stroke-width="2" d="M57 187h482"/>
  <path fill="#004A37" fill-rule="nonzero" d="M59.115 779.892h-2.33v4.233h-2.204V773.33h5.296c.756.014 1.339.107 1.746.278.408.17.754.422 1.037.754.234.274.42.576.556.909.137.332.205.71.205 1.135 0 .512-.129 1.017-.388 1.512-.259.496-.686.846-1.281 1.051.498.2.85.485 1.058.854.207.368.311.93.311 1.688v.725c0 .493.02.827.059 1.003.058.279.195.484.41.615v.271h-2.483a7.745 7.745 0 0 1-.147-.578 5.316 5.316 0 0 1-.095-.93l-.014-1.004c-.01-.688-.136-1.147-.378-1.377-.241-.23-.694-.344-1.358-.344Zm1.37-1.963c.449-.205.673-.61.673-1.216 0-.654-.217-1.093-.652-1.318-.244-.127-.61-.19-1.098-.19h-2.622v2.9h2.556c.508 0 .889-.059 1.142-.176Zm12.392 1.48h-5.244v2.776h5.976v1.94h-8.18V773.33h7.917v1.911h-5.713v2.293h5.244v1.875Zm6.409 3.156c.532 0 .964-.058 1.296-.175.63-.225.945-.642.945-1.253 0-.356-.156-.632-.469-.827-.312-.19-.803-.36-1.472-.506l-1.143-.256c-1.123-.254-1.899-.53-2.329-.828-.727-.498-1.091-1.277-1.091-2.336 0-.967.352-1.77 1.055-2.41.703-.64 1.736-.96 3.098-.96 1.138 0 2.108.302 2.911.905.803.603 1.225 1.478 1.264 2.626h-2.168c-.04-.65-.323-1.11-.85-1.384-.352-.181-.789-.271-1.311-.271-.581 0-1.045.117-1.392.351a1.12 1.12 0 0 0-.52.982c0 .385.171.673.513.864.22.127.689.276 1.406.447l1.86.446c.816.196 1.431.457 1.846.784.645.508.967 1.243.967 2.205 0 .986-.377 1.805-1.131 2.457-.755.652-1.82.978-3.197.978-1.407 0-2.513-.321-3.318-.963-.806-.642-1.209-1.525-1.209-2.648h2.154c.068.493.202.862.402 1.106.367.444.994.666 1.883.666Zm10.671-2.321h-2.292v3.881h-2.242V773.33h4.703c1.084 0 1.948.278 2.592.835.645.556.967 1.418.967 2.585 0 1.274-.322 2.175-.967 2.703-.644.527-1.565.79-2.76.79Zm1.055-2.249c.293-.259.44-.669.44-1.23 0-.562-.148-.962-.444-1.202-.295-.239-.71-.358-1.241-.358h-2.102v3.178h2.102c.532 0 .947-.13 1.245-.388Zm11.88 1.414h-5.244v2.776h5.976v1.94h-8.181V773.33h7.917v1.911h-5.712v2.293h5.244v1.875Zm10.107 3.91c-.806.738-1.836 1.107-3.09 1.107-1.553 0-2.774-.498-3.663-1.494-.889-1.001-1.333-2.373-1.333-4.117 0-1.884.505-3.337 1.516-4.357.88-.89 1.997-1.333 3.355-1.333 1.816 0 3.144.595 3.984 1.787.464.669.713 1.34.747 2.014h-2.256c-.146-.518-.334-.908-.564-1.172-.41-.469-1.018-.703-1.823-.703-.82 0-1.468.33-1.941.992-.474.662-.71 1.598-.71 2.81 0 1.21.25 2.117.75 2.72.5.603 1.136.905 1.908.905.791 0 1.394-.26 1.809-.777.23-.278.42-.696.571-1.252h2.234c-.195 1.176-.693 2.134-1.494 2.87Zm11.06-9.99v1.912h-3.23v8.884h-2.27v-8.884h-3.245v-1.911h8.745Zm59.804 6.08h-5.244v2.776h5.977v1.94h-8.182V773.33h7.918v1.911h-5.713v2.293h5.244v1.875Zm11.22 4.716h-2.255l-4.41-7.668v7.668h-2.101V773.33h2.366l4.299 7.536v-7.536h2.102v10.795Zm6.754 0h-4.651V773.33h4.65c.67.01 1.226.087 1.67.234.758.249 1.37.706 1.84 1.37.375.537.631 1.118.768 1.743s.205 1.22.205 1.787c0 1.435-.288 2.651-.864 3.647-.781 1.343-1.987 2.014-3.618 2.014Zm1.677-8.042c-.347-.585-1.033-.878-2.058-.878h-2.08v7.045h2.08c1.064 0 1.807-.524 2.227-1.574.229-.576.344-1.262.344-2.058 0-1.099-.171-1.944-.513-2.535Zm12.02 3.326h-5.245v2.776h5.977v1.94h-8.182V773.33h7.918v1.911h-5.713v2.293h5.244v1.875Zm8.81 2.497h-3.977l-.747 2.22h-2.358l3.852-10.796h2.549l3.823 10.795h-2.446l-.696-2.219Zm-.63-1.86-1.347-4.248-1.392 4.248h2.74Zm4.344-6.716h2.41l2.343 8.195 2.366-8.195h2.343l-3.684 10.795h-2.131l-3.647-10.795Zm15.578 11.096c-1.543 0-2.722-.42-3.537-1.26-1.094-1.03-1.641-2.515-1.641-4.453 0-1.978.547-3.462 1.64-4.453.816-.84 1.995-1.26 3.538-1.26 1.543 0 2.722.42 3.538 1.26 1.089.991 1.633 2.475 1.633 4.453 0 1.938-.544 3.423-1.633 4.453-.816.84-1.995 1.26-3.538 1.26Zm2.132-2.9c.522-.66.783-1.597.783-2.813 0-1.211-.262-2.147-.787-2.809-.525-.662-1.234-.992-2.128-.992-.893 0-1.606.33-2.139.988-.532.66-.798 1.597-.798 2.813 0 1.216.266 2.153.798 2.812.533.66 1.246.99 2.14.99.893 0 1.603-.33 2.13-.99Zm11.147-1.56v-6.636h2.292v6.635c0 1.148-.178 2.041-.534 2.681-.664 1.172-1.931 1.758-3.801 1.758s-3.14-.586-3.81-1.758c-.356-.64-.534-1.533-.534-2.68v-6.636h2.293v6.635c0 .743.088 1.285.263 1.626.274.606.87.909 1.788.909.913 0 1.506-.303 1.78-.909.175-.341.263-.883.263-1.626Zm9.03-.074h-2.328v4.233h-2.205V773.33h5.295c.757.014 1.34.107 1.747.278.408.17.753.422 1.037.754.234.274.42.576.556.909.137.332.205.71.205 1.135 0 .512-.129 1.017-.388 1.512-.259.496-.686.846-1.282 1.051.498.2.851.485 1.059.854.207.368.311.93.311 1.688v.725c0 .493.02.827.059 1.003.058.279.195.484.41.615v.271h-2.483a7.744 7.744 0 0 1-.147-.578 5.316 5.316 0 0 1-.095-.93l-.014-1.004c-.01-.688-.136-1.147-.378-1.377-.241-.23-.694-.344-1.358-.344Zm1.37-1.963c.45-.205.674-.61.674-1.216 0-.654-.217-1.093-.652-1.318-.244-.127-.61-.19-1.098-.19h-2.622v2.9h2.556c.508 0 .888-.059 1.142-.176Zm62.342 3.977h-3.977l-.747 2.22h-2.359l3.853-10.796h2.549l3.823 10.795h-2.446l-.696-2.219Zm-.63-1.86-1.348-4.248-1.391 4.248h2.739Zm9.06 2.52c.532 0 .964-.06 1.296-.176.63-.225.945-.642.945-1.253 0-.356-.156-.632-.469-.827-.312-.19-.803-.36-1.472-.506l-1.142-.256c-1.123-.254-1.9-.53-2.33-.828-.727-.498-1.09-1.277-1.09-2.336 0-.967.35-1.77 1.054-2.41.703-.64 1.736-.96 3.098-.96 1.138 0 2.108.302 2.911.905.804.603 1.225 1.478 1.264 2.626h-2.168c-.04-.65-.322-1.11-.85-1.384-.351-.181-.788-.271-1.31-.271-.582 0-1.046.117-1.392.351a1.12 1.12 0 0 0-.52.982c0 .385.17.673.512.864.22.127.689.276 1.407.447l1.86.446c.815.196 1.43.457 1.846.784.644.508.966 1.243.966 2.205 0 .986-.377 1.805-1.131 2.457-.755.652-1.82.978-3.197.978-1.406 0-2.512-.321-3.318-.963-.806-.642-1.208-1.525-1.208-2.648h2.153c.068.493.202.862.403 1.106.366.444.993.666 1.882.666Zm10.671-2.322h-2.292v3.881h-2.241V773.33h4.702c1.084 0 1.948.278 2.593.835.644.556.966 1.418.966 2.585 0 1.274-.322 2.175-.966 2.703-.645.527-1.565.79-2.762.79Zm1.055-2.249c.293-.259.44-.669.44-1.23 0-.562-.148-.962-.444-1.202-.295-.239-.709-.358-1.241-.358h-2.102v3.178h2.102c.532 0 .947-.13 1.245-.388Zm4.19-4.665h2.24v10.795h-2.24V773.33Zm8.928 6.562h-2.33v4.233h-2.204V773.33h5.295c.757.014 1.34.107 1.747.278.408.17.753.422 1.037.754.234.274.42.576.556.909.137.332.205.71.205 1.135 0 .512-.129 1.017-.388 1.512-.259.496-.686.846-1.282 1.051.498.2.851.485 1.059.854.207.368.311.93.311 1.688v.725c0 .493.02.827.059 1.003.058.279.195.484.41.615v.271h-2.483a7.744 7.744 0 0 1-.147-.578 5.316 5.316 0 0 1-.095-.93l-.014-1.004c-.01-.688-.136-1.147-.378-1.377-.241-.23-.694-.344-1.358-.344Zm1.37-1.963c.449-.205.673-.61.673-1.216 0-.654-.217-1.093-.652-1.318-.244-.127-.61-.19-1.098-.19h-2.622v2.9h2.556c.508 0 .888-.059 1.142-.176Zm11.198 3.977h-3.977l-.747 2.22h-2.358l3.852-10.796h2.549l3.823 10.795h-2.446l-.696-2.219Zm-.63-1.86-1.347-4.248-1.392 4.248h2.74Zm12.986-6.716v1.911h-3.23v8.884h-2.27v-8.884h-3.245v-1.911h8.745Zm1.143 0h2.24v10.795h-2.24V773.33Zm9.118 11.096c-1.543 0-2.722-.42-3.537-1.26-1.094-1.03-1.64-2.515-1.64-4.453 0-1.978.546-3.462 1.64-4.453.815-.84 1.994-1.26 3.537-1.26s2.722.42 3.538 1.26c1.089.991 1.633 2.475 1.633 4.453 0 1.938-.544 3.423-1.633 4.453-.816.84-1.995 1.26-3.538 1.26Zm2.132-2.9c.522-.66.783-1.597.783-2.813 0-1.211-.262-2.147-.787-2.809-.525-.662-1.234-.992-2.128-.992-.893 0-1.606.33-2.138.988-.533.66-.799 1.597-.799 2.813 0 1.216.266 2.153.799 2.812.532.66 1.245.99 2.138.99.894 0 1.604-.33 2.132-.99Zm13.49 2.6h-2.255l-4.41-7.669v7.668h-2.101V773.33h2.365l4.3 7.536v-7.536h2.102v10.795Zm53.502-10.796h2.256v8.855h5.346v1.94h-7.602V773.33Zm16.677 6.079h-5.244v2.776h5.976v1.94h-8.18V773.33h7.917v1.911h-5.713v2.293h5.244v1.875Zm8.811 2.497h-3.977l-.747 2.22h-2.359l3.853-10.796h2.549l3.823 10.795h-2.446l-.696-2.219Zm-.63-1.86-1.348-4.248-1.391 4.248h2.74Zm9.727-.154h-2.33v4.233h-2.204V773.33h5.295c.757.014 1.34.107 1.747.278.408.17.753.422 1.037.754.234.274.42.576.556.909.137.332.205.71.205 1.135 0 .512-.13 1.017-.388 1.512-.259.496-.686.846-1.282 1.051.498.2.851.485 1.059.854.207.368.311.93.311 1.688v.725c0 .493.02.827.059 1.003.058.279.195.484.41.615v.271h-2.483a7.745 7.745 0 0 1-.147-.578 5.316 5.316 0 0 1-.095-.93l-.014-1.004c-.01-.688-.136-1.147-.378-1.377-.241-.23-.694-.344-1.358-.344Zm1.37-1.963c.449-.205.673-.61.673-1.216 0-.654-.217-1.093-.652-1.318-.244-.127-.61-.19-1.098-.19h-2.622v2.9h2.556c.508 0 .888-.059 1.142-.176Zm13.608 6.196h-2.256l-4.41-7.668v7.668h-2.101V773.33h2.365l4.3 7.536v-7.536h2.102v10.795Zm1.926-10.795h2.241v10.795h-2.241V773.33Zm13.074 10.795h-2.256l-4.41-7.668v7.668h-2.101V773.33h2.365l4.3 7.536v-7.536h2.102v10.795Zm8.723-.263c-.596.366-1.328.55-2.197.55-1.431 0-2.603-.496-3.516-1.488-.952-.996-1.428-2.358-1.428-4.087 0-1.748.48-3.149 1.443-4.204.962-1.054 2.233-1.582 3.816-1.582 1.372 0 2.474.348 3.306 1.044.833.696 1.31 1.564 1.432 2.604h-2.219c-.17-.738-.588-1.253-1.252-1.546a3.076 3.076 0 0 0-1.238-.241c-.87 0-1.583.328-2.143.985-.559.656-.838 1.644-.838 2.962 0 1.328.303 2.268.908 2.82.606.552 1.294.828 2.065.828.757 0 1.377-.219 1.86-.656.484-.437.782-1.01.894-1.717h-2.497v-1.802h4.497v5.793h-1.494l-.227-1.347c-.435.513-.825.874-1.172 1.084Z"/>
  </symbol>
  </svg></div>`).appendTo('#dash')
  
  // certificate template
  var template = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 595 830">
  <use href="#logohead"/>
  <text fill="#004A37" font-family="Georgia-BoldItalic, Georgia" font-size="50" font-style="italic" font-weight="bold" letter-spacing="6" transform="rotate(-90 -60 360)" text-anchor="middle"><tspan x="-177" y="522" class="level">Achievement</tspan></text>
  <text x="539" y="255" fill="#000" font-family="Georgia-Italic, Georgia" font-size="18" font-style="italic" letter-spacing="1.5" text-anchor="end">
  <tspan x="544" dy="0" font-size="36">Year 10</tspan>
  <tspan x="539" dy="41" font-size="36">Certificate of</tspan>
  <tspan x="544" dy="41" font-size="36" class="level">Achievement</tspan>
  <tspan x="545" dy="49" font-size="24">Awarded to</tspan>
  <tspan x="545" y="624" font-size="18">Simon Wood</tspan>
  <tspan x="544" dy="24" font-size="18">Principal</tspan>
  <tspan x="541" dy="24" font-size="18" class="date"></tspan>
  </text>
  <path stroke="#000" stroke-width="1" d="M397 600h142"/>
  <text x="539" y="447" fill="#000" font-family="Georgia-BoldItalic, Georgia" font-size="36" font-weight="bold" font-style="italic" letter-spacing="1.5" text-anchor="end" class="name">
  </text>
  </svg>`
  
  // header UI
  $('<div>').addClass('header').appendTo('#dash')
  $('<h1>').addClass('title').text('Graduation Certificates').appendTo('#dash .header')
  var selectCycle = $('<select>').appendTo('#dash .header')
  $('<div>').addClass('button').text('Create').click(loadCycle).appendTo('#dash .header')
  $('<div>').addClass('button').text('Print').click(function() {
    window.print()
  }).appendTo('#dash .header')
  $('<div>').addClass('button').text('Close').click(function() {
    window.single = false
    $('#dash').remove()
  }).appendTo('#dash .header')
  $('<div>')
    .addClass('cycle')
    .addClass('note')
    .html('<p>Create graduation certificates based on the Year 10 Graduation Rubric.</p><p>👨🏻‍💻 Email Andrew Kerr for support</p>')
    .appendTo('#dash')
  
  // get the report cycles to populate dropdown list
  getCycles().done(loadCycles)
  
  function getCycles() {
    return $.ajax("/Services/Reports.svc/GetCycles",{
      data: JSON.stringify({page: 1, start: 0, limit: 25}),
      contentType: 'application/json',
      type: 'POST'})
  }
  
  function loadCycles(cycles) {
    $.each(cycles.d, function(i, n) {
      var option = $('<option>').attr('value', n.id)
                                .text(n.name + ' ' + n.year)
                                .appendTo(selectCycle)
      if (i == 0) {
        option.attr('selected', 'selected')
      }
    })
    selectCycle.change()
  }

  // get the subjects for the selected cycle
  function loadCycle() {
    var cycleId = selectCycle.val()
    $('.cycle').hide()
    if ($(`#c${cycleId}`).length) {
      $(`#c${cycleId}`).show()
    } else {
      var cycle = $('<div>').attr('id', `c${cycleId}`).addClass('cycle').appendTo('#dash')
      getSubjects(cycleId).done((subjects) => loadSubjects(subjects, cycleId))
    }
  }

  function getSubjects(cycleId) {
    return $.ajax("/Services/Reports.svc/GetCycleActivitiesBySubject",{
      data: JSON.stringify({cycleId: cycleId, node:"root"}),
      contentType: 'application/json',
      type: 'POST'})
  }

  function loadSubjects(subjects, cycleId) {
    let subjectId = subjects.d.filter(s => s.text == "AV102 Advisory")[0].value
    getClasses(subjectId).done((classes) => loadClasses(classes, cycleId))
  }

  function getClasses(subjectId) {
    return $.ajax("/Services/Subjects.svc/GetStandardClassesOfSubject",{
      data: JSON.stringify({subjectId: subjectId, page:1, start:0, limit:50}),
      contentType: 'application/json',
      type: 'POST'})
  }

  function loadClasses(classes, cycleId) {
    $.each(classes.d.data, function() {
      let group = this.name
      $('<h3>').text(group).appendTo(`#c${cycleId}.cycle`)
      $('<div>').addClass(`g${group} group`).appendTo(`#c${cycleId}.cycle`)
      let activityId = this.id
      getTasks(activityId).done((tasks) => loadTasks(tasks, cycleId))
    })
  }
  
  function getTasks(activityId) {
    return $.ajax("/Services/LearningTasks.svc/GetAllLearningTasksByActivityId",{
      data: JSON.stringify({activityId: activityId, page:1,start:0,limit:2000}),
      contentType: 'application/json',
      type: 'POST'})
  }
  
  function loadTasks(tasks, cycleId) {
    let task = tasks.d.data.filter(t => t.name == "Year 10 Graduation Rubric")[0]
    let group = task.groupName
    let year = new Date(task.activityStart).getUTCFullYear()
    let date = `December ${year}`
    $.each(task.students, function() {
      let userId = this.userId
      let student = $('<div>').addClass(`s${userId} student`).appendTo(`#c${cycleId}.cycle .g${group}.group`)
      $(template).appendTo(`#c${cycleId}.cycle .s${userId}.student`)
      let name = this.userName.replace(/\s\(.*\)/, '')
      let score = this.rubricResults.length ? parseInt(this.rubricResults[0].overallResult) : 0
      let level = "Non-attendance"
      if (score >= 22) {
        level = "Commendation"
      } else if (score >= 16) {
        level = "Graduation"
      } else if (score >= 11) {
        level = "Participation"
      } else if (score >= 5) {
        level = "Enrolment"
      } else {
        $(`#c${cycleId}.cycle .s${userId}.student`).addClass('none')
      }
      let el1 = document.querySelectorAll(`#c${cycleId}.cycle .s${userId}.student .level`)
      el1.forEach(e => e.textContent = level)
      let el2 = document.querySelector(`#c${cycleId}.cycle .s${userId}.student .date`)
      el2.textContent = date
      let el = document.querySelector(`#c${cycleId}.cycle .s${userId}.student .name`)
      el.textContent = name
      let width = el.getBBox().width
      if (width >= 360) {
        let size = Math.round(360 / width * 36)
        el.setAttribute('font-size', size)
        el.setAttribute('y', 447 - (36 - size) / 2)
      }
    })
  }

})